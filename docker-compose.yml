version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: building-survey-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-building_survey}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    volumes:
      # PostgreSQL data persistence
      - postgres_data:/var/lib/postgresql/data
      # Init scripts (runs on first startup)
      - ./docker/postgres/init:/docker-entrypoint-initdb.d:ro
    ports:
      # Expose PostgreSQL port (can be accessed from host)
      - "5432:5432"
    networks:
      - building-survey-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # Build-time environment variables
        NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
    container_name: building-survey-app
    restart: unless-stopped
    environment:
      # Runtime environment variables
      NODE_ENV: production
      # Supabase (Auth only - cloud)
      NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      # PostgreSQL connection (internal Docker network)
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-building_survey}
      # Application settings
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL}
      # File upload directory
      UPLOAD_DIR: /app/uploads
    volumes:
      # Persistent storage for uploaded photos
      - uploads_data:/app/uploads
    ports:
      # Expose Next.js port
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - building-survey-network
    # Healthcheck disabled - curl not available in alpine image
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

  # Nginx Proxy (for cPanel environments where direct port mapping fails)
  nginx-proxy:
    image: nginx:alpine
    container_name: building-survey-nginx
    restart: unless-stopped
    ports:
      - "8888:80"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - building-survey-network

  # Setup PHP Script (temporary - remove after admin user created)
  setup:
    build:
      context: ./setup
      dockerfile: Dockerfile
    container_name: building-survey-setup
    restart: "no"
    volumes:
      - ./setup:/var/www/html:ro
    ports:
      - "8080:80"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB:-building_survey}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - building-survey-network
    profiles:
      # Only start when explicitly requested
      # docker-compose --profile setup up setup
      - setup

volumes:
  postgres_data:
    name: building-survey-postgres-data
  uploads_data:
    name: building-survey-uploads-data

networks:
  building-survey-network:
    name: building-survey-network
    driver: bridge
